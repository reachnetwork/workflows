name: RSpec Tests
on:
  pull_request:
    branches:
    - main
    - beta
  workflow_call:
    inputs:
      ruby-version:
        type: string
        default: 3.0
    secrets:
      ssh-private-key:
        required: true
      sidekiq-pro-key:
        required: true
      aws-bucket-name:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      aws-region:
        required: true
      aws-cloudfront:
        required: true
      aws-cloudfront-id:
        required: true
jobs:
  rspec:
    name: RSpec
    runs-on: ubuntu-20.04
    services:
      # How to use MySQL
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: 'root'
        ports:
        - 3306
        # options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      # How to use Redis
      redis:
        image: redis:5
        ports:
        - 6379/tcp
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
    - name: Set up ssh
      uses: webfactory/ssh-agent@v0.4.1
      with:
        ssh-private-key: ${{ secrets.ssh-private-key }}
    - name: Set up ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ inputs.ruby-version }}
    - name: Cache bundler
      uses: actions/cache@v2
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    - name: Verify mysql connection
      run: |
        sudo apt-get update
        sudo apt-get install -y mysql-client libmysqlclient-dev
        mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot -e "SHOW GRANTS FOR 'root'@'localhost'"
        mysql_tzinfo_to_sql /usr/share/zoneinfo | mysql --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }} -uroot -proot mysql
    - name: Bundle and create db
      env:
        RAILS_ENV: test
        TEST_DB_ADAPTER: 'mysql2'
        TEST_DB_DB: 'degreepage_test'
        TEST_DB_USERNAME: 'root'
        TEST_DB_PASSWORD: 'root'
        TEST_DB_HOST: '127.0.0.1'
        TEST_DB_ENCODING: 'utf8mb4'
        TEST_DB_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
      run: |
        gem install bundler --version 2.2.33
        bundle config gems.contribsys.com ${{ secrets.sidekiq-pro-key }}
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3 --path vendor/bundle
        mysql -e "set global sql_mode='STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';" -uroot -proot --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }}
        mysql -e 'CREATE DATABASE IF NOT EXISTS degreepage_test;' -uroot -proot --host 127.0.0.1 --port ${{ job.services.mysql.ports[3306] }}
        # create DB for Rails 5.x
        bundle exec rails db:setup
    - name: Run tests
      env:
        RAILS_ENV: test
        TEST_DB_ADAPTER: 'mysql2'
        TEST_DB_DB: 'degreepage_test'
        TEST_DB_USERNAME: 'root'
        TEST_DB_PASSWORD: 'root'
        TEST_DB_HOST: '127.0.0.1'
        TEST_DB_ENCODING: 'utf8mb4'
        TEST_DB_PORT: ${{ job.services.mysql.ports[3306] }} # get randomly assigned published port
        AWS_BUCKET_NAME: ${{ secrets.aws-bucket-name }}
        AWS_ACCESS_KEY_ID: ${{ secrets.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.aws-secret-access-key }}
        AWS_REGION: ${{ secrets.aws-region }}
        AMAZON_CLOUDFRONT: ${{ secrets.aws-cloudfront }}
        CLOUDFRONT_ID: ${{ secrets.aws-cloudfront-id }}
        REDIS_PORT: ${{ job.services.redis.ports[6379] }}
      run: |
        bundle exec rspec --format documentation